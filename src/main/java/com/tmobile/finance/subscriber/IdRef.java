/*
 * BillingAccountsSearch
 * This service returns an account used for billing purposes.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: shay.soifer@amdocs.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.tmobile.finance.subscriber;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * IdRef
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-02-08T11:56:47.701-05:00")
public class IdRef {
  /**
   * rel
   */
  @JsonAdapter(RelEnum.Adapter.class)
  public enum RelEnum {
    SELF("self"),
    
    PARENT("parent"),
    
    CHILD("child"),
    
    NEXT("next"),
    
    PREV("prev"),
    
    FIRST("first"),
    
    LAST("last"),
    
    ITEM("item"),
    
    COLLECTION("collection"),
    
    ORGANIZATION("organization"),
    
    SUBSCRIBER("subscriber"),
    
    BILLING_ACCOUNT("billing-account"),
    
    NEXT_ORGANIZATION("next-organization"),
    
    USAGE("usage"),
    
    BILL_CHARGES("bill-charges"),
    
    SERVICE_AGREEMENT("service-agreement"),
    
    BILL_ADJUSTMENTS("bill-adjustments");

    private String value;

    RelEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static RelEnum fromValue(String text) {
      for (RelEnum b : RelEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<RelEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final RelEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public RelEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return RelEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("rel")
  private RelEnum rel = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("href")
  private String href = null;

  public IdRef rel(RelEnum rel) {
    this.rel = rel;
    return this;
  }

   /**
   * rel
   * @return rel
  **/
  @ApiModelProperty(value = "rel")
  public RelEnum getRel() {
    return rel;
  }

  public void setRel(RelEnum rel) {
    this.rel = rel;
  }

  public IdRef id(String id) {
    this.id = id;
    return this;
  }

   /**
   * id
   * @return id
  **/
  @ApiModelProperty(value = "id")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public IdRef href(String href) {
    this.href = href;
    return this;
  }

   /**
   * href
   * @return href
  **/
  @ApiModelProperty(value = "href")
  public String getHref() {
    return href;
  }

  public void setHref(String href) {
    this.href = href;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IdRef idRef = (IdRef) o;
    return Objects.equals(this.rel, idRef.rel) &&
        Objects.equals(this.id, idRef.id) &&
        Objects.equals(this.href, idRef.href);
  }

  @Override
  public int hashCode() {
    return Objects.hash(rel, id, href);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IdRef {\n");
    
    sb.append("    rel: ").append(toIndentedString(rel)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    href: ").append(toIndentedString(href)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

