/*
 * BillingAccountsSearch
 * This service returns an account used for billing purposes.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: shay.soifer@amdocs.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.tmobile.finance.subscriber;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * AccountType
 */
@ApiModel(description = "AccountType")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-02-08T11:56:47.701-05:00")
public class AccountType {
  @SerializedName("code")
  private String code = null;

  @SerializedName("accountTypeDescription")
  private String accountTypeDescription = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("subtype")
  private String subtype = null;

  @SerializedName("subTypeDescription")
  private String subTypeDescription = null;

  @SerializedName("hierarchyId")
  private Long hierarchyId = null;

  public AccountType code(String code) {
    this.code = code;
    return this;
  }

   /**
   * code
   * @return code
  **/
  @ApiModelProperty(value = "code")
  public String getCode() {
    return code;
  }

  public void setCode(String code) {
    this.code = code;
  }

  public AccountType accountTypeDescription(String accountTypeDescription) {
    this.accountTypeDescription = accountTypeDescription;
    return this;
  }

   /**
   * description
   * @return accountTypeDescription
  **/
  @ApiModelProperty(value = "description")
  public String getAccountTypeDescription() {
    return accountTypeDescription;
  }

  public void setAccountTypeDescription(String accountTypeDescription) {
    this.accountTypeDescription = accountTypeDescription;
  }

  public AccountType name(String name) {
    this.name = name;
    return this;
  }

   /**
   * name
   * @return name
  **/
  @ApiModelProperty(value = "name")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public AccountType subtype(String subtype) {
    this.subtype = subtype;
    return this;
  }

   /**
   * subtype
   * @return subtype
  **/
  @ApiModelProperty(value = "subtype")
  public String getSubtype() {
    return subtype;
  }

  public void setSubtype(String subtype) {
    this.subtype = subtype;
  }

  public AccountType subTypeDescription(String subTypeDescription) {
    this.subTypeDescription = subTypeDescription;
    return this;
  }

   /**
   * description
   * @return subTypeDescription
  **/
  @ApiModelProperty(value = "description")
  public String getSubTypeDescription() {
    return subTypeDescription;
  }

  public void setSubTypeDescription(String subTypeDescription) {
    this.subTypeDescription = subTypeDescription;
  }

  public AccountType hierarchyId(Long hierarchyId) {
    this.hierarchyId = hierarchyId;
    return this;
  }

   /**
   * hierarchyId
   * @return hierarchyId
  **/
  @ApiModelProperty(value = "hierarchyId")
  public Long getHierarchyId() {
    return hierarchyId;
  }

  public void setHierarchyId(Long hierarchyId) {
    this.hierarchyId = hierarchyId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AccountType accountType = (AccountType) o;
    return Objects.equals(this.code, accountType.code) &&
        Objects.equals(this.accountTypeDescription, accountType.accountTypeDescription) &&
        Objects.equals(this.name, accountType.name) &&
        Objects.equals(this.subtype, accountType.subtype) &&
        Objects.equals(this.subTypeDescription, accountType.subTypeDescription) &&
        Objects.equals(this.hierarchyId, accountType.hierarchyId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(code, accountTypeDescription, name, subtype, subTypeDescription, hierarchyId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AccountType {\n");
    
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    accountTypeDescription: ").append(toIndentedString(accountTypeDescription)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    subtype: ").append(toIndentedString(subtype)).append("\n");
    sb.append("    subTypeDescription: ").append(toIndentedString(subTypeDescription)).append("\n");
    sb.append("    hierarchyId: ").append(toIndentedString(hierarchyId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

