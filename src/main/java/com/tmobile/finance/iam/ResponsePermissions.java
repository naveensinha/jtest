/*
 * 
 * 
 *
 * 
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.tmobile.finance.iam;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.tmobile.finance.iam.ResponsePermissionsAvailableLists;
import com.tmobile.finance.iam.ResponsePermissionsImplicitPermissions;
import com.tmobile.finance.iam.ResponseTMobileIdentityAccountDetailsAccess;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * ResponsePermissions
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-02-04T13:48:26.690-05:00")
public class ResponsePermissions {
  @SerializedName("ImplicitPermissions")
  private List<ResponsePermissionsImplicitPermissions> implicitPermissions = null;

  @SerializedName("Access")
  private ResponseTMobileIdentityAccountDetailsAccess access = null;

  @SerializedName("AvailableLists")
  private ResponsePermissionsAvailableLists availableLists = null;

  public ResponsePermissions implicitPermissions(List<ResponsePermissionsImplicitPermissions> implicitPermissions) {
    this.implicitPermissions = implicitPermissions;
    return this;
  }

  public ResponsePermissions addImplicitPermissionsItem(ResponsePermissionsImplicitPermissions implicitPermissionsItem) {
    if (this.implicitPermissions == null) {
      this.implicitPermissions = new ArrayList<ResponsePermissionsImplicitPermissions>();
    }
    this.implicitPermissions.add(implicitPermissionsItem);
    return this;
  }

   /**
   * Get implicitPermissions
   * @return implicitPermissions
  **/
  @ApiModelProperty(value = "")
  public List<ResponsePermissionsImplicitPermissions> getImplicitPermissions() {
    return implicitPermissions;
  }

  public void setImplicitPermissions(List<ResponsePermissionsImplicitPermissions> implicitPermissions) {
    this.implicitPermissions = implicitPermissions;
  }

  public ResponsePermissions access(ResponseTMobileIdentityAccountDetailsAccess access) {
    this.access = access;
    return this;
  }

   /**
   * Get access
   * @return access
  **/
  @ApiModelProperty(value = "")
  public ResponseTMobileIdentityAccountDetailsAccess getAccess() {
    return access;
  }

  public void setAccess(ResponseTMobileIdentityAccountDetailsAccess access) {
    this.access = access;
  }

  public ResponsePermissions availableLists(ResponsePermissionsAvailableLists availableLists) {
    this.availableLists = availableLists;
    return this;
  }

   /**
   * Get availableLists
   * @return availableLists
  **/
  @ApiModelProperty(value = "")
  public ResponsePermissionsAvailableLists getAvailableLists() {
    return availableLists;
  }

  public void setAvailableLists(ResponsePermissionsAvailableLists availableLists) {
    this.availableLists = availableLists;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ResponsePermissions responsePermissions = (ResponsePermissions) o;
    return Objects.equals(this.implicitPermissions, responsePermissions.implicitPermissions) &&
        Objects.equals(this.access, responsePermissions.access) &&
        Objects.equals(this.availableLists, responsePermissions.availableLists);
  }

  @Override
  public int hashCode() {
    return Objects.hash(implicitPermissions, access, availableLists);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ResponsePermissions {\n");
    
    sb.append("    implicitPermissions: ").append(toIndentedString(implicitPermissions)).append("\n");
    sb.append("    access: ").append(toIndentedString(access)).append("\n");
    sb.append("    availableLists: ").append(toIndentedString(availableLists)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

