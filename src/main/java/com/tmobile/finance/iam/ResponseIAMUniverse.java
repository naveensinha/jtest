/*
 * 
 * 
 *
 * 
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.tmobile.finance.iam;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.tmobile.finance.iam.ResponseIAMUniverseAccountInformation;
import com.tmobile.finance.iam.ResponseIAMUniverseBillingAccountDetails;
import com.tmobile.finance.iam.ResponseIAMUniverseCustomers;
import com.tmobile.finance.iam.ResponseTMobileIdentityAccountDetailsAccess;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * ResponseIAMUniverse
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-02-04T13:48:26.690-05:00")
public class ResponseIAMUniverse {
  @SerializedName("AccountInformation")
  private List<ResponseIAMUniverseAccountInformation> accountInformation = null;

  @SerializedName("Customers")
  private List<ResponseIAMUniverseCustomers> customers = null;

  @SerializedName("BillingAccountDetails")
  private List<ResponseIAMUniverseBillingAccountDetails> billingAccountDetails = null;

  @SerializedName("Access")
  private ResponseTMobileIdentityAccountDetailsAccess access = null;

  public ResponseIAMUniverse accountInformation(List<ResponseIAMUniverseAccountInformation> accountInformation) {
    this.accountInformation = accountInformation;
    return this;
  }

  public ResponseIAMUniverse addAccountInformationItem(ResponseIAMUniverseAccountInformation accountInformationItem) {
    if (this.accountInformation == null) {
      this.accountInformation = new ArrayList<ResponseIAMUniverseAccountInformation>();
    }
    this.accountInformation.add(accountInformationItem);
    return this;
  }

   /**
   * Get accountInformation
   * @return accountInformation
  **/
  @ApiModelProperty(value = "")
  public List<ResponseIAMUniverseAccountInformation> getAccountInformation() {
    return accountInformation;
  }

  public void setAccountInformation(List<ResponseIAMUniverseAccountInformation> accountInformation) {
    this.accountInformation = accountInformation;
  }

  public ResponseIAMUniverse customers(List<ResponseIAMUniverseCustomers> customers) {
    this.customers = customers;
    return this;
  }

  public ResponseIAMUniverse addCustomersItem(ResponseIAMUniverseCustomers customersItem) {
    if (this.customers == null) {
      this.customers = new ArrayList<ResponseIAMUniverseCustomers>();
    }
    this.customers.add(customersItem);
    return this;
  }

   /**
   * Get customers
   * @return customers
  **/
  @ApiModelProperty(value = "")
  public List<ResponseIAMUniverseCustomers> getCustomers() {
    return customers;
  }

  public void setCustomers(List<ResponseIAMUniverseCustomers> customers) {
    this.customers = customers;
  }

  public ResponseIAMUniverse billingAccountDetails(List<ResponseIAMUniverseBillingAccountDetails> billingAccountDetails) {
    this.billingAccountDetails = billingAccountDetails;
    return this;
  }

  public ResponseIAMUniverse addBillingAccountDetailsItem(ResponseIAMUniverseBillingAccountDetails billingAccountDetailsItem) {
    if (this.billingAccountDetails == null) {
      this.billingAccountDetails = new ArrayList<ResponseIAMUniverseBillingAccountDetails>();
    }
    this.billingAccountDetails.add(billingAccountDetailsItem);
    return this;
  }

   /**
   * Get billingAccountDetails
   * @return billingAccountDetails
  **/
  @ApiModelProperty(value = "")
  public List<ResponseIAMUniverseBillingAccountDetails> getBillingAccountDetails() {
    return billingAccountDetails;
  }

  public void setBillingAccountDetails(List<ResponseIAMUniverseBillingAccountDetails> billingAccountDetails) {
    this.billingAccountDetails = billingAccountDetails;
  }

  public ResponseIAMUniverse access(ResponseTMobileIdentityAccountDetailsAccess access) {
    this.access = access;
    return this;
  }

   /**
   * Get access
   * @return access
  **/
  @ApiModelProperty(value = "")
  public ResponseTMobileIdentityAccountDetailsAccess getAccess() {
    return access;
  }

  public void setAccess(ResponseTMobileIdentityAccountDetailsAccess access) {
    this.access = access;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ResponseIAMUniverse responseIAMUniverse = (ResponseIAMUniverse) o;
    return Objects.equals(this.accountInformation, responseIAMUniverse.accountInformation) &&
        Objects.equals(this.customers, responseIAMUniverse.customers) &&
        Objects.equals(this.billingAccountDetails, responseIAMUniverse.billingAccountDetails) &&
        Objects.equals(this.access, responseIAMUniverse.access);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountInformation, customers, billingAccountDetails, access);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ResponseIAMUniverse {\n");
    
    sb.append("    accountInformation: ").append(toIndentedString(accountInformation)).append("\n");
    sb.append("    customers: ").append(toIndentedString(customers)).append("\n");
    sb.append("    billingAccountDetails: ").append(toIndentedString(billingAccountDetails)).append("\n");
    sb.append("    access: ").append(toIndentedString(access)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

